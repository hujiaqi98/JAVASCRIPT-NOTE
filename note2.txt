//////////////////////////////////////////////////////////////////
//////////////////////创建于2020年7月16日
html指的是超文本标记语言，是用来描述网页的一种语言
html不是一种编程语言，而是一种标记语言
浏览器内核(渲染引擎)：负责读取网页内容，整理讯息，计算网页的显示方式并显示页面
safari 内核 webkit
chrome/opera 内核 blink 

web标准的构成
主要包括结构（structure）表现（presentation）行为（behavior）三个方面
结构 对网页元素进行整理和分类 html
表现 设置网页元素的版式 颜色 大小等外观css
行为 网页模型的定义及交互编写 JavaScript
为什么需要web标准：浏览器不同，它们显示页面或者排版就有些许差异
**********************************************************************************
html语法
标签关系 包含（父子）和并列
********************************************************************************* 
基本骨架标签
<html>
    <head>
        <title>
	</title>
    </head>
    <body>
    </body>
</html>
********************************************************************************* 
标题标签 字体大小 重要性 递减
<body>
    <h1> 123</h1>
    <h2> 123</h2>
    <h3> 123</h3>
    <h4> 123</h4>
    <h5> 123</h5>
    <h6> 123</h6>
</body>
********************************************************************************* 
段落标签 <p> </p>  (paragraph段落)
<p><h2>你始终可以对已定义的对象添加新的属性。例如，car1.color = "black" 语句给 car1 添加了一个新的属性 color，并给这个属性赋值 "black"。但是，这不会影响任何其他对象。要将新属性添加到相同类型的所有对象，你必须将该属性添加到 Car 对象类型的定义中.</h2></p>

     <p>你可以使用 Function.prototype 属性将共享属性添加到以前定义的对象类型。这定义了一个由该函数创建的所有对象共享的属性，而不仅仅是对象类型的其中一个实例。下面的代码将一个值为 null 的 color 属性添加到 car 类型的所有对象，然后仅在实例对象 car1 中用字符串 "black" 覆盖该值。详见 prototype。</p>
*********************************************************************************    
换行标签 <br /> (break 为数不多的单标签之一)
html，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后才自动换行。如果希望某段文本强制换行显示，就需要使用换行标签<br />
<p>你可以使用 Function.prototype 属性将共享属性添加到以前定义的对象类型。<br />这定义了一个由该函数创建的所有对象共享的属性，而不仅仅是对象类型的其中一个实例。下面的代码将一个值为 null 的 color 属性添加到 car 类型的所有对象，然后仅在实例对象 car1 中用字符串 "black" 覆盖该值。详见 prototype。</p>
********************************************************************************* 
文本格式化标签（为需要的文字设置 粗体 斜体 或下划线等效果 让文字以特殊方式显示）
加粗<strong></strong>
倾斜<em></em>
删除线<del></del>
下划线<ins></ins>
********************************************************************************* 
<div> 和 <span> 标签 (division 分割 分区    span跨度 跨距)
<div> 和 <span> 是没有语义的，它们就是一个盒子，用来装内容的
语法：<div></div>  <span></span>
div用来布局，但是现在一行只能放一个<div>.大盒子
span用来布局，一行可以放多个<span>.小盒子
********************************************************************************* 
图像标签和路径
图像标签<img>
<img src="图像url"/>//////src是<img>标签的必须属性，它用于指定图像文件的路径和文件名
<img src="img.jpg" alt="加载等待"/> ///当图像加载不出来的时候加载文字
属性     属性值          说明
src	 图片路径        必须属性
alt      文本            替换文本 图像不能显示时的文字
title    文本            提示文本 鼠标放在图像上显示的文字
width    像素            设置图像的宽度
height   像素            设置图像的高度
border   像素            设置图像的边框粗细
目录文件夹 就是普通文件夹，里面只不过存放了我们做页面所需要的相关素材
根目录 打开目录文件夹的第一层就是根目录
相对路径 文件（图片）相对于html的位置
同一路径 图像文件处于html文件同一级 <img src="baidu.gif"/>
下一级路径（/） 图像文件处于html文件的下一级 <img src="images/baidu.gif"/>/////下一级文件夹为images
上一级路径（../） 图像文件位于html文件的上一级 <img src="../baidu.gif"/>

利用绝对路径
(本地)<img src="C:\Users\apple\Desktop\img.jpg"/>  ///注意绝对路径反斜杠的方向
(网络 固定的不会变的)<img src="http://www.baidu/2018czgw/logo.png"/>(可以将图片上传到云 复制链接地址也可以导入)
********************************************************************************* 
********************************************************************************* 
超链接标签
html标签中 <a>用于定义超链接 作用是从一个页面连接到另一个页面（anchor 锚）

链接的语法格式//一对<a>标签把文本或图片包含起来
<a href="跳转目标" target="目标窗口的弹出方式">文本或图像</a>
<a href="https...." target="_self">文本</a>
属性          作用
href          用于指定连接目标的url地址，（必须属性）当为标签应用href属性时，就具有了超链接的功能
target        用于指定链接页面的打开方式 其中_self为默认值 _blank为在新窗口中打开方式

链接分类
1.外部链接：例如<a href="http://www.baidu.com">百度</a>
2.内部链接：网站内部页面之间的相互链接 直接连接内部页面名称即可 <a href="index.html">首页</a>
3.空连接：如果当时没有确定链接目标时 <a href="#">首页</a>
4.下载链接：如果href里面地址是一个文件或者压缩包 会下载这个文件(同一目录压缩包下载)<a href="img.zip">下载文件</a>
5.网页元素链接：在网页中的各种网页元素、如文本、图像、表格、音频、视频等都可以添加超链接
6.锚点链接：点击链接 可以快速定位到页面中的某个位置
···在链接文本的href属性中 设置属性值为 #名字 的形式 如<a href="#two">第二季</a>
···找到目标位置标签 里面添加一个id属性=刚才的名字 如<h1 id="two">第二季介绍</h1>
*********************************************************************************
注释标签
html中的注释以  "<!--"开头  以 "-->"结束
快捷键 ctrl+/
*********************************************************************************
特殊字符
在html页面中 一些特殊的符号很难或者不方便直接使用 此时我们就可以使用下面的字符代替
特殊字符				描述				字符的代码
空格				空格符				&nbsp;
				版权				&copy;
				注册商标				&reg;
				平方2（上标）			&sup2;
				立方3（上标）			&sup3;
*********************************************************************************
*********************************************************************************
表格标签(展示大量数据)
表格基本语法（3x3表格）
<table>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
</table>
表头单元格标签<th></th>
一般表头单元格位于表格的第一行或第一列 表头单元格里面的文本内容加粗居中显示
<table>
   <tr><th>单元格文字</th> <th>单元格文字</th> <th>单元格文字</th></tr>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
</table>
表格属性
属性名			属性值			描述
align		  left、center、right		规定表格相对周围元素的对齐方式
border			1或""			规定表格单元是否拥有边框 默认为"" 表示没有边框 
<table align="center" border="1" cellspacing="0">
   <tr><th>单元格文字</th> <th>单元格文字</th> <th>单元格文字</th></tr>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
   <tr><td>单元格文字</td> <td>单元格文字</td> <td>单元格文字</td></tr>
</table>
*********************************************************************************
<table>
<thead>                 <!--<thead>内部必须要有<tr>标签-->
  <tr>
     <th>内容</th>
     <th>内容</th>
     <th>内容</th>
  </tr>
</thead>
<tbody>
  <tr>
     <td>数据</td>
     <td>数据</td>
     <td>数据</td>
  </tr>
</tbody>
</table>
*********************************************************************************
合并单元格方式
跨行合并：rowspan="合并单元格的个数"
跨列合并：colspan="合并单元格的个数"
目标单元格：(写合并代码)
跨行：最上侧单元格为目标单元格 写合并代码
跨列：最左侧单元格为目标单元格 写合并代码
<td colspan="2">  </td>
*********************************************************************************
*********************************************************************************
列表标签
列表就是用来布局的
列表分三大类 无序列表 有序列表 自定义列表

无序列表基本语法
<ul> 
  <li>列表项1</li>
  <li>列表项2</li>
  <li><p>列表项3</p></li>
</ul>
1.无序列表的各个列表项之间没有顺序级别之分 是并列
2.<ul></ul>中只能嵌套<li></li> 直接在<ul></ul>标签中输入其他标签或者文字的做法是不被允许的
3.<li></li>之间相当于一个容器 可以容纳所有元素
4.无序列表会带有自己的样式属性 但在实际使用时 会使用CSS来设置

有序列表基本语法（有排列顺序的列表 其各个列表项会按照一定的顺序排列定义）
<ol>
  <li>列表项1</li>
  <li>列表项2</li>
  <li><p>列表项3</p></li>
</ol>
1.<ol></ol>中只能嵌套<li></li> 直接在<ol></ol>标签中输入其他标签或者文字的做法是不被允许的
2.<li>与</li>之间相当于一个容器 可以容纳所有元素
3.有序列表会带有自己的样式属性 在实际使用时 会使用CSS来设置

自定义列表(自定义列表常用于对术语或名词进行解释和描述 定义列表的列表项前没有任何项目符号)
基本语法
<dl>
  <dt>名词1</dt>
  <dt>名词1解释1</dt>
  <dt>名词1解释2</dt>
</dl>

1.<dl></dl>里面只能包含<dt>和<dd>
2.<dt>和<dd>个数没有限制 经常是一个<dt>对应多个<dd>
*********************************************************************************
********************************************************************************* 
表单标签
在html中 一个完整的表单通常由表单域、表单控件（input select textarea 也称为表单元素）和提示信息3个部分构成

表单域是一个包含表单元素的区域 在HTML中 <form>标签用于定义表单域 以实现用户信息的手机和传递
<form>会把他范围内的表单元素信息提交给服务器
基本语法
<form action="url地址"method="提交方式"name="表单域名称">
  各种表单元素控件
</form>
属性			属性值			作用
action			url地址			用于指定接收并处理扁担数据的服务器程序的url地址
method			get/post		用于设置表单数据的提交方式 其取值为get或post
name			名称			用于指定表单的名称 以区分同一个页面中的多个表单域

表单标签
<input>表单元素（单标签）
在<input>标签中 包含一个type属性 根据不同的type属性值 输入字段拥有很多形式（可以是文本字段、复选框、掩码后的文本控单选按按钮等）
<input type="属性值" />
type属性
属性值			描述
button			定义可点击按钮
password		定义密码字段
radio			定义单选按钮
text			定义单行的输入字段 用户可在其中输入文本 默认宽度为20字符
submit			定义提交按钮 提交按钮会把表单数据发送到服务器
reset			定义重置按钮 重置按钮会清除表单域中的所有数据
'''			'''
除了type以外 <input>标签还有其他的很多属性 ：
属性			属性值			描述
name			由用户自定义		定义input元素的名称
value			由用户自定义		规定input元素的值
checked			checked 		规定此input元素首次加载时应当被选中
maxlength		正整数			规定输入字段中的字符的最大长度
'''			'''

1.name和value是每个表单元素都有的属性值 主要给后台人员使用
2.name表单元素的名字 要求单选按钮 和 复选框 要有相同的name值
<form>
  <input type="text" maxlength="6">////最多输入6个字符
  男 <input type="radio" name="sex" checked="checked"> 女<input type="radio" name="sex">   /////多选一
  <input type="submit" value="免费注册">///表单域数据提交
  <input type="reset" value="重新填写">
</form>
********************************************************************************* 
<label>标签
<label>标签为input元素定义标注（标签） 
<label>标签用于绑定一个表单元素 当点击<label>标签内的文本时 浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上 用来增加用户体验
<label for="1234">"用户名"</label> <input type="text" id="1234">
<input typr="radio" id="nan"> <label for="nan">男</label>
核心 label标签内的for属性应当与相关元素的id属性相同
********************************************************************************* 
select下拉表单元素
在页面中 如果有多个选项让用户选择 并且想要节约页面空间时 我们可以使用<select>标签控件定义下拉列表
<select>
  <option>内容1</option>
  <option>内容2</option>
  <option>内容3</option>
  <option>内容4</option>
  <option selected="selected">内容5</option>
</select>

1.<select>中至少要包含一对<option>
2.在<option>中定义 selected="selected"时 当前项即为默认选中项
********************************************************************************* 
<textarea>
当用户输入内容较多的情况下 就不能使用文本框了 此时要使用<textarea>标签
在表单元素中 <textarea>标签是用于定义多行文本输入的控件
基本语法
<textarea rows="3" cols="20">
文本内容
</textarea>
1.通过<textarea>标签可以轻松创建多行文本输入框
2.cols="每行中的字符数" rows="显示的行数" 实际开发中不会使用 都是用css来改变大小
********************************************************************************* 
********************************************************************************* 
********************************************************************************* 
表单元素的几个总结点
1.表单元素三大组 input输入表单元素 select下拉表单元素 textarea文本域表单元素
2.这三组表单元素都应该包含在form表单域里面 并且有name属性

查阅文档
W3C:http://www.w3school.com.cn/
MDN:https://developer.mozilla.org/zh-CN/
********************************************************************************* 
********************************************************************************* 
*********************************************************************************
/////////////////////////////////////////////////////////////////////////////////
				CSS
css主要使用场景就是美化网页 布局页面
css是层叠样式表(cascading style sheets)的简称 css样式表 级联样式表
css也是标记语言
css最大的价值：由HTML专注去做结构呈现 样式交给css 结构(HTML)与样式(CSS)相分离
css规则由两个主要的部分构成：选择器以及一条或多条声明
css代码风格
1.属性值前面 冒号后面 保留一个空格
2.选择器(标签)和大括号中间保留空格
h3 {
    color: pink;
}
*********************************************************************************
css基础选择器
选择器就是根据不同需求把不同的标签选出来 这就是选择器的作用
基础选择器（标签选择器）（类选择器）（id选择器）（通配符选择器）和符合选择器
*********************************************************************************
标签选择器是指用html标签名称作为选择器 按标签名称分类 为页面中某一类标签指定统一的css样式
标签名 {
    属性1：属性值
    属性2：属性值
    属性3：属性值
}
*********************************************************************************
类选择器 （开发最常用）如果想要差异化选择不同的标签 单独选一个或者某几个标签 可以使用类选择器
基本语法
.类名 {
    属性1：属性值;
}
 .red { 			///定义类（class）型
          color: gold;
       }
<h2 class="red"> 文本</h2>  //////////调用class
注意：
1.类选择器使用"."来进行表示 后面紧跟类名（自己定义）
2.可以理解为给这个标签起了一个名字 来表示
3.长名称或词组可以使用中横线来为选择器命名
4.不要使用纯数字 中文等命名 尽量使用英文字母来表示

类选择器-多类名
可以给一个标签指定多个类名 从而达到更多的选择目的 这些类名都可以选出这个标签
基本语法
<div class="red hezi1"></div>
1.在标签class属性中写多个类名
2.多个类名中间必须用空格分开
*********************************************************************************
id选择器(只能调用一次)
id选择器可以为标有特定id的HTML元素指定待定的样式
HTML元素一id属性来设置id选择器 css中id选择器以"#"来定义
基本语法
#id名 {
    属性1：属性值1；
    ....
}
#pink {
    color:"red";
}
<div id="pink">like</div>

id选择器和类选择器的区别
1.类选择器（class）好比人的名字 同一个名字可以被多个人使用
2.id选择器好比人的身份证号码 是唯一的 不能重复
3.id选择器 和 类选择器 最大的不同在于使用的次数上
4.类选择器在修改样式中用的最多 id选择器一般用于页面唯一性的元素上 经常和JavaScript搭配使用
*********************************************************************************
通配符选择器
基本语法
* {
    color:red;
}
*这里把html body div span等所有标签全部改为了红色
统配符选择器不需要调用 自动借给所有的元素是使用样式
*********************************************************************************
css字体属性

字体
css使用font-family属性定义文本的字体系列
p {font-family:"微软雅黑";}
div {font-family: Arial,"Microsoft Yahei","微软雅黑"}
1各种字体之间必须使用英文状态下的逗号隔开
2一般情况下 如果有空格隔开的多个单词组成的字体 加引号
3尽量使用系统默认自带字体 保证任何人的浏览器中都能正确显示
4最常见的几个字体：body{font-family:'Microsoft YaHei',tahoma,arial,'Hiragino Sans GB';}//引擎递减搜寻匹配

字体大小 ///chrome默认字体大小为16px//标题标签比较特殊 要单独指定文字大小
p {
    font-size: 20px;
}

字体粗细
p {
    font-weight: bold;
    font-weight:700;////400等同于normal 700等同于bold注意这个数字后面 不加单位
}

文字样式
p {
    font-style:normal;
}
属性			作用
normal			默认值 浏览器会显示标准的字体样式 font-style：normal；
italic			浏览器会显示斜体的字体样式

对齐文本
text-align属性用于设置元素内文本内容的水平对齐方式
div {
    text-align: center;
}
属性值			解释
left			左对齐默认
right			右对齐
center			居中对齐

装饰文本
text-decoration属性规定添加到文本的修饰 可以给文本添加下划线 删除线 上划线
div {
    text-decoration: underline
}
属性值			描述
none			默认 没有装饰线
underline		下划线
overline		上划线
line-through		删除线

文本缩进
text-indent属性用来指定文本的第一行的缩进 通常是将段落的首行缩进
div {
    text-indent: 10px;
}

div {
    text-index: 2em;//////相对于当前文字大小进行首行缩进
}

行间距
line-height属性用于设置行间的距离（行高） 可以控制文字行与行之间的距离
p {
    line-height: 26px;
}
*********************************************************************************
*********************************************************************************
css引入方式
内部样式表（内嵌样式表)  是写到html页面内部 是将所有css代码抽取出来 单独放到一个<style>标签中
行内样式表              是在元素标签内部的style属性中设定css样式 适用于修改简单的样式
	                <div style="color:red; font-size=12px;">文本</div>
外部样式表             实际开发都是外部样式表 适合于样式比较多的情况 核心是：样式单独写到css文件中 之后把css文件引入到                       HTML页面中使用
		引入外部样式表分为两步：
		1.新建一个后缀名为.css的样式文件 把所有css代码都放入此文件中
		2.在html页面中 使用<link>标签引入这个文件
    <link rel="stylesheet" href="css文件路径">
*********************************************************************************
Vscode 快速格式化代码：shift+alt+f
*********************************************************************************
css的复合选择器
在css中 可以根据选择器的类型 把选择器分为 基础选择器 和 复合选择器 复合选择器时间里在基础选择器之上 对基本选择器进行组合形成的

复合选择器可以更准确 更高效的选择目标元素（标签）
复合选择器是由两个或多个基础选择器 通过不同的方式组合而成
常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等


后代选择器又称为 包含选择器 可以选择父元素里面子元素 其写法就是把外层标签写在前面 内层标签写在后面 中间用空格分隔 当标签 发生嵌套时 内层标签就成为外层标签的后代
基本语法：
元素1 元素2 {样式声明}
ol li {
    color:"red"
}

<ol>
  <li>  </li>
  <li>  </li>
  <li>  </li>
</ol>

子选择器 
子选择器只能作为选择作为某元素的最近一级子元素